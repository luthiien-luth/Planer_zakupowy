// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Planer_zakupowy.Backend.DataAccess;

#nullable disable

namespace Planer_zakupowy.Backend.DataAccess.Migrations
{
    [DbContext(typeof(PlanerZakupowyDbContext))]
    partial class PlanerZakupowyDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Planer_zakupowy.Backend.DataAccess.Models.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Category")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float?>("Price")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("Planer_zakupowy.Backend.DataAccess.Models.ProductsList", b =>
                {
                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ShoppingListId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<float>("PriceOfBoughtProducts")
                        .HasColumnType("real");

                    b.Property<DateTime>("ProductBoughtDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ProductInsertionDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProductStatusOnList")
                        .HasColumnType("int");

                    b.HasKey("ProductId", "ShoppingListId");

                    b.HasIndex("ShoppingListId");

                    b.ToTable("ProductsLists");
                });

            modelBuilder.Entity("Planer_zakupowy.Backend.DataAccess.Models.ShoppingList", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EndShoppingDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ShoppingListStatus")
                        .HasColumnType("int");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("ShoppingLists");
                });

            modelBuilder.Entity("Planer_zakupowy.Backend.DataAccess.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Planer_zakupowy.Backend.DataAccess.Models.ProductsList", b =>
                {
                    b.HasOne("Planer_zakupowy.Backend.DataAccess.Models.Product", "Product")
                        .WithMany("ProductsLists")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Planer_zakupowy.Backend.DataAccess.Models.ShoppingList", "ShoppingList")
                        .WithMany("ProductsLists")
                        .HasForeignKey("ShoppingListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("ShoppingList");
                });

            modelBuilder.Entity("Planer_zakupowy.Backend.DataAccess.Models.ShoppingList", b =>
                {
                    b.HasOne("Planer_zakupowy.Backend.DataAccess.Models.User", "User")
                        .WithMany("ShoppingLists")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Planer_zakupowy.Backend.DataAccess.Models.Product", b =>
                {
                    b.Navigation("ProductsLists");
                });

            modelBuilder.Entity("Planer_zakupowy.Backend.DataAccess.Models.ShoppingList", b =>
                {
                    b.Navigation("ProductsLists");
                });

            modelBuilder.Entity("Planer_zakupowy.Backend.DataAccess.Models.User", b =>
                {
                    b.Navigation("ShoppingLists");
                });
#pragma warning restore 612, 618
        }
    }
}
